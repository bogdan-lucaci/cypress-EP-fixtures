{
    "method": {
        "ID": 83,
        "name": "unionpay",
        "supportMultiple": true,
        "skip": false,
        "knownIssue": ""
    },
    "testCases": [
        {
            "test": {
                "name": "InsertPayin",
                "tags": [],
                "description": "",
                "environment": "production",
                "skip": false,
                "knownIssue": "You have been added to the blacklist. Please don't do stress testing. TPS could not be greater than 0.5. BlackList Will be clear at time 00:00."
            },
            "actions": [
                {
                    "type": "request",
                    "body": "<?xml version=\"1.0\" encoding=\"utf-8\"?><Request version=\"1.0\" xmlns=\"http://europay.smart2pay.com/message\"><Action>INSERT_PAYIN</Action><MID>$MID</MID><MSID>12345</MSID><PaymentMethod>unionpay</PaymentMethod><IPAddress>127.0.0.1</IPAddress><Hash>$HASH</Hash><Details><MTID>$MTID</MTID><Amount>100</Amount><Currency>CNY</Currency><SuccessURL>http://demo2.smart2pay.com/_redirectURLs//success.html</SuccessURL><FailureURL>http://demo2.smart2pay.com/_redirectURLs//failure.html</FailureURL><ProcessingURL>http://demo2.smart2pay.com/_redirectURLs//processing.html</ProcessingURL><CancelURL>http://demo2.smart2pay.com/_redirectURLs//cancel.html</CancelURL><PaymentType>purchase</PaymentType><Description>EP VS Automated Test Payment</Description><CustomerName>Madlene</CustomerName><CustomerEmail>madalina@test.com</CustomerEmail></Details></Request>",
                    "hashElements": [
                        "Action",
                        "MID",
                        "PaymentMethod",
                        "IPAddress",
                        "MTID",
                        "Amount",
                        "Currency"
                    ],
                    "expect": {
                        "StatusCode": 200,
                        "Amount": "100"
                    }
                },
                {
                    "type": "visitEPLanding"
                },
                {
                    "type": "pageInteraction",
                    "delay": 2000,
                    "description": "Provider page 1",
                    "url": "95516.com",
                    "elements": [
                        {
                            "path": "//*[@id='cardNumber']"
                        },
                        {
                            "path": "//*[@id='btnNext']"
                        },
                        {
                            "path": "//*[@id='userName']"
                        },
                        {
                            "path": "//*[@id='_ocx_password_down']"
                        },
                        {
                            "path": "//*[@id='btnSubmit']"
                        },
                        {
                            "path": "//em[@class='order_money']",
                            "action": "assert",
                            "should": ["not.be.empty"]
                        },
                        {
                            "path": "//*[@id='merchantNameDisplay_id']",
                            "action": "assert",
                            "should": ["not.be.empty"]
                        },
                        {
                            "path": "//p[contains(text(),'Order Number')]",
                            "action": "testRegex",
                            "value": "(Order Number.+\\d+)"
                        }
                    ]
                },
                {
                    "type": "dbQuery",
                    "delay": 1000,
					"serverName": "APM_DB",
                    "query": "SELECT [UnionPayPayments].[Amount] as Amount, [PaymentStateDefs].[Name] as Status FROM [Europay].[dbo].[UnionPayPayments], [PaymentStateDefs] where [UnionPayPayments].PaymentStateDefID = [PaymentStateDefs].PaymentStateDefID and [UnionPayPayments].[PaymentID] = (SELECT [UnionPayPayments].[PaymentID] FROM [Europay].[dbo].[UnionPayPayments]  inner join SystemPayments on UnionPayPayments.[PaymentID] = SystemPayments.PaymentID and SystemPayments.MerchantID = @MID and SystemPayments.GPaymentID = @TRXID)",
                    "expect": {
                        "Status": "Open",
                        "Amount": 1.00
                    }
                }
            ]
        }
    ]
}